# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/protoc-gen-connecpy.  DO NOT EDIT!
# source: haberdasher_edition_2023.proto

from typing import Any, Protocol, Union

import httpx

from connecpy.async_client import AsyncConnecpyClient
from connecpy.base import Endpoint
from connecpy.server import ConnecpyServer
from connecpy.client import ConnecpyClient
from connecpy.context import ClientContext, ServiceContext

import haberdasher_edition_2023_pb2 as _pb2

from google.protobuf import symbol_database

_sym_db = symbol_database.Default()


class Haberdasher(Protocol):
    async def MakeHat(self, req: _pb2.Size, ctx: ServiceContext) -> _pb2.Hat: ...


class HaberdasherServer(ConnecpyServer):
    def __init__(self, *, service: Haberdasher, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/i2y.connecpy.example2023.Haberdasher"
        self._endpoints = {
            "MakeHat": Endpoint[_pb2.Size, _pb2.Hat](
                service_name="Haberdasher",
                name="MakeHat",
                function=getattr(service, "MakeHat"),
                input=_pb2.Size,
                output=_pb2.Hat,
                allowed_methods=("GET", "POST"),
            ),
        }

    def serviceName(self):
        return "i2y.connecpy.example2023.Haberdasher"


class HaberdasherSync(Protocol):
    def MakeHat(self, req: _pb2.Size, ctx: ServiceContext) -> _pb2.Hat: ...


class HaberdasherServerSync(ConnecpyServer):
    def __init__(self, *, service: HaberdasherSync, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/i2y.connecpy.example2023.Haberdasher"
        self._endpoints = {
            "MakeHat": Endpoint[_pb2.Size, _pb2.Hat](
                service_name="Haberdasher",
                name="MakeHat",
                function=getattr(service, "MakeHat"),
                input=_pb2.Size,
                output=_pb2.Hat,
                allowed_methods=("GET", "POST"),
            ),
        }

    def serviceName(self):
        return "i2y.connecpy.example2023.Haberdasher"


class HaberdasherClient(ConnecpyClient):
    def MakeHat(
        self,
        *,
        request: _pb2.Size,
        ctx: ClientContext,
        server_path_prefix: str = "",
        use_get: bool = False,
        **kwargs,
    ) -> _pb2.Hat:
        method = "GET" if use_get else "POST"
        return self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example2023.Haberdasher/MakeHat",
            ctx=ctx,
            request=request,
            response_obj=_pb2.Hat,
            method=method,
            **kwargs,
        )


class AsyncHaberdasherClient(AsyncConnecpyClient):
    async def MakeHat(
        self,
        *,
        request: _pb2.Size,
        ctx: ClientContext,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
        use_get: bool = False,
        **kwargs,
    ) -> _pb2.Hat:
        method = "GET" if use_get else "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example2023.Haberdasher/MakeHat",
            ctx=ctx,
            request=request,
            response_obj=_pb2.Hat,
            method=method,
            session=session,
            **kwargs,
        )
