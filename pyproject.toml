[project]
name = "connect-python"
version = "0.5.0"
description = "Server and client runtime library for Connect RPC"
maintainers = [
    { name = "Anuraag Agrawal", email = "anuraaga@gmail.com" },
    { name = "Spencer Nelson", email = "spencer@firetiger.com" },
    { name = "Stefan VanBuren", email = "svanburen@buf.build" },
    { name = "Yasushi Itoh", email = "i2y.may.roku@gmail.com" },
]
requires-python = ">= 3.10"
dependencies = ["httpx", "protobuf>=5.28"]
readme = "README.md"
license-files = ["LICENSE"]
keywords = ["rpc", "grpc", "connect", "protobuf", "http"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

[project.urls]
Homepage = "https://github.com/connectrpc/connect-python"
Repository = "https://github.com/connectrpc/connect-python"
Issues = "https://github.com/connectrpc/connect-python/issues"

[tool.uv]
dev-dependencies = [
    "asgiref",
    "brotli",
    "connect-python-example",
    "coverage",
    "flask",
    "just-bin; sys_platform != 'win32'",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pyright[nodejs]",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "ruff",
    "typing_extensions",
    "zstandard",
]

[build-system]
requires = ["uv_build>=0.8.13,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "connectrpc"

[tool.pytest.ini_options]
testpaths = ["test"]

[tool.ruff.format]
skip-magic-trailing-comma = true
docstring-code-format = true

[tool.ruff.lint]
extend-select = [
    # Same order as listed on https://docs.astral.sh/ruff/rules/
    "YTT",
    "ANN",
    "ASYNC",
    "S",
    "FBT",
    "B",
    "A",
    "COM818", # Other comma rules are handled by formatting
    "C4",
    "DTZ",
    "T10",
    "EM",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "LOG",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q004",   # Other quote rules are handled by formatting
    "RSE",
    "RET",
    # This rule is a bit strict since accessing private members within this package can be
    # useful to reduce public API exposure. But it is important to not access private members
    # of dependencies like httpx so we enable it and ignore the locations where we need to.
    "SLF",
    "SIM",
    "SLOT",
    "TID",
    # TODO: Update TODOs then enable
    # "TD",
    "TC",
    "ARG",
    "PTH",
    "FLY",
    "I",
    "N",
    "PERF",
    "E",
    "W",
    # TODO: Flesh out docs and enable
    # "DOC"
    # "D",
    "F",
    "PGH",
    "PLC",
    "PLE",
    "PLW",
    "UP",
    "FURB",
    "RUF",
    # TODO: See if it makes sense to enable after a pass at reducing code duplication
    # "TRY",
]

# Document reasons for ignoring specific linting errors
extend-ignore = [
    # Not applicable
    "AIR",
    # Dangerous false positives https://github.com/astral-sh/ruff/issues/4845
    "ERA",
    # Not Applicable
    "FAST",
    # Important to call user callbacks safely
    "BLE",
    # stdlib includes a module named code. This is less of an issue since users need to import a module so allow it
    "A005",
    # TODO: Consider using copyright headers
    "CPY",
    # Not Applicable
    "DJ",
    # It's fine to have TODOs
    "FIX",
    # Not Applicable
    "INT",
    # Even prevents pytest.raises around an iteration which is too strict
    "PT012",
    # Triggers for protocol implementations that don't need the arg too
    "ARG002",
    # Complexity checks usually reduce readability
    "C90",
    # Not Applicable
    "NPY",
    # Not Applicable
    "PD",
    # We use the Exception suffix instead
    "N818",
    # Handled by formatting
    "E111",
    "E114",
    "E117",
    "E501",
    "W191",
    # Low signal-to-noise ratio
    "PLR",
]

[tool.ruff.lint.per-file-ignores]
"conformance/test/**" = ["ANN", "INP", "SLF", "SIM115", "D"]
"example/**" = [
    "ANN",
    "S",   # Keep examples simpler, e.g. allow normal random
    "T20",
    "D",
]
"**/test_*.py" = [
    "ANN",
    "S101",
    "S603",
    "S607",
    "FBT",
    "EM",
    "INP",
    "SLF",
    "PERF",
    "D",
]

[tool.ruff.lint.isort]
split-on-trailing-comma = false

[tool.ruff]
# Don't run ruff on generated code from external plugins.
extend-exclude = ["*_pb2.py", "*_pb2.pyi"]

[tool.pyright]
exclude = [
    # Defaults.
    "**/node_modules",
    "**/__pycache__",
    "**/.*",

    # GRPC python files don't typecheck on their own.
    # See https://github.com/grpc/grpc/issues/39555
    "**/*_pb2_grpc.py",

    # TODO: Work out the import issues to allow it to work.
    "conformance/**",
]

[tool.uv.workspace]
members = ["conformance", "example", "noextras"]

[tool.uv.sources]
connect-python = { workspace = true }
connect-python-example = { workspace = true }
