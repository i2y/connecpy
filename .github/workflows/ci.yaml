name: CI
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-15
          - ubuntu-24.04
          - windows-2025

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version-file: "pyproject.toml"

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.work
          cache-dependency-path: "**/go.mod"

      - run: uv sync

      - name: run lints
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          uv run ruff format --check .
          uv run ruff check .
          uv run pyright

      - name: run python tests
        run: uv run pytest

      - name: run conformance tests
        # TODO: Debug stdin/stdout issues on Windows
        if: ${{ !startsWith(matrix.os, 'windows-') }}
        run: uv run pytest
        working-directory: conformance

      - name: run tests with minimal dependencies
        run: |
          uv sync --exact
          uv run pytest
        working-directory: noextras

      - name: run Go tests
        run: go test ./...
        working-directory: protoc-gen-connecpy

      - name: build Go archives
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        run: go tool goreleaser release --snapshot --clean
