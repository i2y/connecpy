name: CI
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  # Cancel in-progress jobs for PRs only
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/main' && github.sha || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-15
          - ubuntu-24.04
          - windows-2025
        python:
          - "3.10"
          - "3.13"
        coverage:
          - "nocov"
        # Test oldest and newest on all OS's, but others only on one
        # to save CI load.
        include:
          - os: ubuntu-24.04
            python: "3.11"
            coverage: "nocov"
          - os: ubuntu-24.04
            python: "3.12"
            coverage: "nocov"
          # Enable coverage on just one job
          - os: ubuntu-24.04
            python: "3.13"
            coverage: "cov"
          - os: ubuntu-24.04
            python: "3.14.0-rc.2"
            coverage: "nocov"

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python }}

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: go.work
          cache-dependency-path: "**/go.mod"

      - run: uv sync

      - name: run lints
        if: startsWith(matrix.os, 'ubuntu-')
        run: |
          uv run ruff format --check .
          uv run ruff check .
          uv run pyright

      - name: run python tests
        run: uv run pytest ${{ matrix.coverage == 'cov' && '--cov=connecpy --cov-report=xml' || '' }}

      - name: run conformance tests
        # TODO: Debug stdin/stdout issues on Windows
        if: ${{ !startsWith(matrix.os, 'windows-') }}
        run: uv run pytest ${{ matrix.coverage == 'cov' && '--cov=connecpy --cov-report=xml' || '' }}
        working-directory: conformance

      - name: run tests with minimal dependencies
        run: uv run --exact pytest ${{ matrix.coverage == 'cov' && '--cov=connecpy --cov-report=xml' || '' }}
        working-directory: noextras

      - name: run Go tests
        run: go test ./...
        working-directory: protoc-gen-connecpy

      - name: build Go archives
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: "~> v2"
          args: release --snapshot --clean

      - uses: codecov/codecov-action@v5
        if: ${{ matrix.coverage == 'cov' }}
