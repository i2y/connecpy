# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/protoc-gen-connecpy.  DO NOT EDIT!
# source: connectrpc/conformance/v1/service.proto

from typing import Iterable, Mapping, Protocol

from connecpy.client import ConnecpyClient, ConnecpyClientSync
from connecpy.code import Code
from connecpy.exceptions import ConnecpyException
from connecpy.headers import Headers
from connecpy.server import (
    ConnecpyASGIApplication,
    ConnecpyWSGIApplication,
    Endpoint,
    ServerInterceptor,
    ServiceContext,
)
import connectrpc.conformance.v1.service_pb2 as connectrpc_dot_conformance_dot_v1_dot_service__pb2


class ConformanceService(Protocol):
    async def Unary(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def ServerStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def ClientStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def BidiStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def Unimplemented(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    async def IdempotentUnary(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class ConformanceServiceASGIApplication(ConnecpyASGIApplication):
    def __init__(
        self,
        service: ConformanceService,
        *,
        interceptors: Iterable[ServerInterceptor] = (),
        max_receive_message_length=1024 * 100 * 100,
    ):
        super().__init__(
            endpoints={
                "/connectrpc.conformance.v1.ConformanceService/Unary": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
                ](
                    service_name="ConformanceService",
                    name="Unary",
                    function=getattr(service, "Unary"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/ServerStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="ServerStream",
                    function=getattr(service, "ServerStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/ClientStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="ClientStream",
                    function=getattr(service, "ClientStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/BidiStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="BidiStream",
                    function=getattr(service, "BidiStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/Unimplemented": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
                ](
                    service_name="ConformanceService",
                    name="Unimplemented",
                    function=getattr(service, "Unimplemented"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/IdempotentUnary": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
                ](
                    service_name="ConformanceService",
                    name="IdempotentUnary",
                    function=getattr(service, "IdempotentUnary"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
                    allowed_methods=("GET", "POST"),
                ),
            },
            interceptors=interceptors,
            max_receive_message_length=max_receive_message_length,
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/connectrpc.conformance.v1.ConformanceService"


class ConformanceServiceClient(ConnecpyClient):
    async def Unary(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse:
        method = "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/Unary",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
        )

    async def ServerStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse:
        method = "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/ServerStream",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
        )

    async def ClientStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse:
        method = "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/ClientStream",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
        )

    async def BidiStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse:
        method = "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/BidiStream",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
        )

    async def Unimplemented(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse:
        method = "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/Unimplemented",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
        )

    async def IdempotentUnary(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
        use_get: bool = False,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse:
        method = "GET" if use_get else "POST"
        return await self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/IdempotentUnary",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
        )


class ConformanceServiceSync(Protocol):
    def Unary(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def ServerStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def ClientStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def BidiStream(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def Unimplemented(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")

    def IdempotentUnary(
        self,
        req: connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
        ctx: ServiceContext,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse:
        raise ConnecpyException(Code.UNIMPLEMENTED, "Not implemented")


class ConformanceServiceWSGIApplication(ConnecpyWSGIApplication):
    def __init__(self, service: ConformanceServiceSync):
        super().__init__(
            endpoints={
                "/connectrpc.conformance.v1.ConformanceService/Unary": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
                ](
                    service_name="ConformanceService",
                    name="Unary",
                    function=getattr(service, "Unary"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/ServerStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="ServerStream",
                    function=getattr(service, "ServerStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/ClientStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="ClientStream",
                    function=getattr(service, "ClientStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/BidiStream": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
                ](
                    service_name="ConformanceService",
                    name="BidiStream",
                    function=getattr(service, "BidiStream"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/Unimplemented": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
                ](
                    service_name="ConformanceService",
                    name="Unimplemented",
                    function=getattr(service, "Unimplemented"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
                    allowed_methods=("POST",),
                ),
                "/connectrpc.conformance.v1.ConformanceService/IdempotentUnary": Endpoint[
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
                    connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
                ](
                    service_name="ConformanceService",
                    name="IdempotentUnary",
                    function=getattr(service, "IdempotentUnary"),
                    input=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
                    output=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
                    allowed_methods=("GET", "POST"),
                ),
            }
        )

    @property
    def path(self):
        """Returns the URL path to mount the application to when serving multiple applications."""
        return "/connectrpc.conformance.v1.ConformanceService"


class ConformanceServiceClientSync(ConnecpyClientSync):
    def Unary(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse:
        method = "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/Unary",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnaryResponse,
        )

    def ServerStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse:
        method = "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/ServerStream",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ServerStreamResponse,
        )

    def ClientStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse:
        method = "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/ClientStream",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.ClientStreamResponse,
        )

    def BidiStream(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse:
        method = "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/BidiStream",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.BidiStreamResponse,
        )

    def Unimplemented(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse:
        method = "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/Unimplemented",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.UnimplementedResponse,
        )

    def IdempotentUnary(
        self,
        request: connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryRequest,
        *,
        headers: Headers | Mapping[str, str] | None = None,
        timeout_ms: int | None = None,
        use_get: bool = False,
    ) -> connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse:
        method = "GET" if use_get else "POST"
        return self._make_request(
            url="/connectrpc.conformance.v1.ConformanceService/IdempotentUnary",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=connectrpc_dot_conformance_dot_v1_dot_service__pb2.IdempotentUnaryResponse,
        )
